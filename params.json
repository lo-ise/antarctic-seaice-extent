{"name":"Antarctic-seaice-extent","tagline":"A tutorial to calculate Antarctic Sea Ice extent from a timeseries of Sea Ice concentration data","body":"## Introduction\r\n\r\nThis exercise presents a method to calculate sea ice extent from sea ice concentration data, using ArcGIS.\r\n\r\nThe exercise will begin by introducing a chain of operations to go from reading in the sea ice concentration data, to outputting a calculation of the extent. It will first demonstrate this on one single band raster dataset. \r\n\r\nThe operations will be executing using the Python prompt in ArcGIS Desktop. \r\n\r\nFinally, it will show how to perform the same commands on any number of datasets. \r\n\r\n\r\n## Learning outcomes\r\n\r\nGIS based functions\r\n* Raster conditional statements\r\n* Awareness of choosing correct projections\r\n* Area calculations\r\n* Raster to vector conversions\r\n\r\nDatasets\r\n* Working with high temporal resolution data\r\n* Sea ice data products derived from remote sensing instruments\r\n\r\nCoding / Scripting\r\n* An introduction to scripting in ArcGIS using ArcPy (Python library)\r\n\r\n\r\n## Tools required\r\n\r\nESRI ArcGIS 10, 10.1, 10.2 or ArcGIS Pro with Spatial Analyst extension\r\n\r\n## What is sea ice and why is it important\r\n\r\nSea ice is literally frozen sea water. Monitoring how the extent changes over time can provide indications of how climate change is effecting the polar regions.\r\n\r\nHere are some links to learn more about sea ice. \r\n\r\n* [All about sea ice by NSIDC](https://nsidc.org/cryosphere/seaice/index.html)\r\n* [A short video constrasting Arctic and Antarctic sea ice trends](https://www.youtube.com/watch?time_continue=102&v=J_WWXGGWZBE)\r\n* [View Sentinel-1 SAR imagery and see what current sea ice conditions are like in the Antarctic](http://www.polarview.aq/antarctic)\r\n* [Polar bear habitats](http://wwf.panda.org/what_we_do/where_we_work/arctic/wildlife/polar_bear/habitat/)\r\n* [More on Arctic Sea Ice](http://earthobservatory.nasa.gov/Features/SeaIce/page3.php)\r\n\r\n\r\n![Sea ice](images/sea-ice-4.jpg)\r\n![Sea ice](images/sea-ice-3.jpg)\r\n![Sea ice](images/sea-ice-2.jpg)\r\n![Sea ice](images/sea-ice-1.jpg)\r\n\r\n## The data source\r\n\r\nFor this exercise, we will be using passive microwave radiometer data, from a continuous dataset that goes back to 1979. \r\n\r\nObjects on the earths surface emit microwave radiation at relatively low energy levels. The structure of ice typically emits more microwave radiation than the surrounding liquid water in the sea. Therefore, microwave radiometers can be used to detect the presence of sea ice. \r\n\r\nOne of the output data products provided by the National Snow and Ice Data Centre (NSIDC) is daily and monthly sea ice concentration rasters that are available from 1979 to present. \r\n\r\n![Sea Ice January 2014](images/sea-ice-2014-01.jpg)\r\n\r\n\r\nTo find out more information, or to access the raw data, visit the [data source webpages](http://nsidc.org/data/nsidc-0051).\r\n\r\nSea ice extent is monitored and calculated on a daily basis by the NSIDC using this data. The output of this is the [Sea Ice Index](http://nsidc.org/data/seaice_index/). The convention is that any cell within the sea ice concentration grids that is above 15% is classed as ice covered and therefore is counted towards the sea ice extent calculation. \r\n\r\n\r\nWe will be using the monthly sea ice concentration data from 2014 to see how it is possible to calculated sea ice extent using ArcGIS. \r\n\r\n## Project setup\r\n\r\n1. Create a working directory.\r\n\r\n1. You may optionally wish to seek out Antarctic coastline data from the [Antarctic Digital Database](http://www.add.scar.org/home/add7).\r\n\r\n2. Download the sea ice concentration data [from here](https://www.dropbox.com/s/5wjfsrzitthibj1/data_monthly.zip?dl=0). Unzip the `data_monthly.zip` directory into the working directory.\r\n\r\n3. Open ArcMap.\r\n\r\n4. Using ArcCatalog, create two file geodatabases in the working directory called `antarctic-sea-ice.gdb` and `antarctic-sea-ice-scratch.gdb`.\r\n\r\n5. Open up the Python prompt and type the following:\r\n```python\r\narcpy.env.workspace = 'path-to-working-directory/antarctic-sea-ice.gdb'\r\narcpy.env.scratchWorkspace = 'path-to-working-directory/antarctic-sea-ice-scratch.gdb'\r\narcpy.env.outputCoordinateSystem = arcpy.SpatialReference('South Pole Lambert Azimuthal Equal Area')\r\narcpy.env.overwriteOutput = True\r\n\r\n```\r\nNote that `path-to-working-directory` should be replaced with the actual path you the working directory that was created in step number 1, ie. `c:/working-dir/` or something similar. \r\n\r\nThe above commands are simply setting the processing environment for the operations that will be conducted. \r\n\r\n`arcpy.env.workspace` is the default workspace that all outputs will be saved to. The `arcpy.env.scratchWorkspace` is for all the temporary files that ArcGIS might create during the processing. \r\n\r\n`arcpy.env.outputCoordinateSystem` simply ensures that all outputs will be converted to an equal area projection,South Polar Lambert Azimuthal Equal Area. We will be calucating areas, so it is important to ensure we calculate on an equal area projection. \r\n\r\nFinally, `arcpy.env.overwriteOutput = True` prevents the annoyance of having to delete outputs from the database before repeats of the same process are completed.  \r\n\r\n\r\n## Extracting area of sea ice extent from one piece of data\r\n\r\nIn order to extract the sea ice extent from the dataset of sea ice concentration, we need to chain together a series of functions. To do this we will use ArcPy commands.\r\n\r\nBefore that though, choose a raster from the `data_monthly` directory and add it to ArcMap. For this example we will use `nt_201401_f17_v1_1_s.tif` (January 2014).\r\n\r\nThe workflow will be:\r\n\r\n1. Load in the raster data into an ArcPy object.\r\n2. Use [raster conditional statement](http://help.arcgis.com/EN/ArcGISDesktop/10.0/Help/index.html#//009z00000005000000.htm) within the ArcGIS Spatial Analyst extension, to extract all cells that are 15% or above (ice covered cells). The result of this will be a raster mask where all values of 1 are ice covered cells.\r\n3. Convert the raster to a polygon feature class. Note, there might be more than one polygon feature. \r\n4. Total up the areas of the polygons within the feature class. \r\n\r\nType the following into the Python prompt:\r\n\r\n```python\r\nimport numpy\r\nfrom arcpy.sa import *\r\n\r\n```\r\nHere we are simply importing [NumPy](http://www.numpy.org/), which is giving us some extra python functionality. \r\n\r\nAnd we are importing all the [ArcPy Spatial Analyst](http://pro.arcgis.com/en/pro-app/arcpy/spatial-analyst/what-is-the-spatial-analyst-module.htm) functions as well (`arcpy.sa`). Make sure you have this extension enabled. \r\n\r\n```python\r\nseaice_raster = Raster('nt_201401_f17_v1_1_s.tif')\r\nseaice_mask = Con(seaice_raster >= 15, 1)\r\nseaice_mask.save('nt_201401_f17_v1_1_s_mask')\r\n```\r\nIn this three lines we are creating a Raster object, pulling out all the cells whose values are 15 or above to a mask object (`Con(seaice_raster >= 15, 1)`), and finally saving the mask object to the geodatabase. \r\n\r\n```python\r\narcpy.RasterToPolygon_conversion(seaice_mask, \"nt_201401_f17_v1_1_s_mask_poly\")\r\n```\r\n\r\nThis line converts the raster mask to a polygon feature class and saves it to the geodatabase.\r\n\r\n```python\r\narea_field = arcpy.da.TableToNumPyArray(\"nt_201401_f17_v1_1_s_mask_poly\", \"Shape_Area\")\r\ntotal_area = area_field[\"Shape_Area\"].sum()\r\nprint total_area\r\n\r\n```\r\n\r\nThese final few lines extract all the records in the `Shape_Area` field of the attribute table, which is already calculated in the previous step by default. It them sums these values which give us `total_area`. \r\n\r\nThe result will be a printed area, a raster mask and a polygon mask.\r\n\r\n![Data renders](images/data-renders.jpg)\r\n\r\n## Extracting sea ice extent from multiple grids\r\n\r\nAs mentioned above, sea ice concentration data from this dataset goes back to 1979. \r\n\r\nUsing the monthly data, we are going to calculate how sea ice extent changes over the course of 2014. We therefore need to calculate extent for 12 grids.\r\n\r\nIt's quite tedious to copy and paste the above commands for all 12 months, so we are now going to see how we can automate this processing using some Python scripting. \r\n\r\nThe script will implement the above commands on each piece of data in turn by running a loop to iterate through each raster in turn. \r\n\r\n\r\n### Create the script\r\n\r\nType the following into a text editor, and save the file as `extent_multiple_grid.py` (NB: make sure you keep the indents, they are 4 spaces long). \r\n\r\n```python\r\n\r\nimport arcpy\r\nfrom arcpy.sa import *\r\n\r\nimport numpy\r\nimport glob\r\nimport os\r\n\r\narcpy.env.workspace = 'e:/dev/antarctic-seaice-extent/antarctic_sea_ice.gdb'\r\narcpy.env.scratchWorkspace = 'e:/dev/antarctic-seaice-extent/antarctic_sea_ice_scratch.gdb'\r\narcpy.env.outputCoordinateSystem = arcpy.SpatialReference('South Pole Lambert Azimuthal Equal Area')\r\narcpy.env.overwriteOutput = True\r\n\r\ndata_dir = 'e:/dev/antarctic-seaice-extent/data_monthly/'\r\ndata_listing = glob.glob('{}nt_2014*.tif'.format(data_dir))\r\n\r\nif not arcpy.Exists('extent_results'):\r\n    arcpy.CreateTable_management(arcpy.env.workspace, 'extent_results') \r\n    arcpy.AddField_management(\"extent_results\", 'data_source', \"TEXT\")\r\n    arcpy.AddField_management(\"extent_results\", 'area', \"DOUBLE\")\r\n\r\ntable_input = arcpy.da.InsertCursor('extent_results', ['data_source', 'area'])\r\n\r\nfor data in data_listing:\r\n    raster_name = os.path.basename(data)\r\n    raster_name = raster_name.replace('.tif', '')\r\n    seaice_raster = Raster(data)\r\n    seaice_mask = Con(seaice_raster >= 15, 1)\r\n    seaice_mask.save(\"{}_mask\".format(raster_name))\r\n    arcpy.RasterToPolygon_conversion(seaice_mask, \"{}_mask_poly\".format(raster_name))\r\n    area_field = arcpy.da.TableToNumPyArray(\"{}_mask_poly\".format(raster_name), \"Shape_Area\")\r\n    total_area = area_field[\"Shape_Area\"].sum()\r\n    table_input.insertRow([raster_name, total_area])\r\n\r\ndel table_input\r\n\r\n```\r\n\r\nYou will need to make a few changes to the directory paths to ensure the script is pointing to your working directory.\r\n\r\nThen to run the script from the Python prompt, first remove all layers from the current ArcMap document and type...\r\n\r\n\r\n```python\r\nexecfile('path_to_working_directory/extent_multiple_grid.py')\r\n```\r\n\r\n... then wait.....\r\n\r\nYou will see the extent polygons appearing one at time, once they've been calculated. \r\n\r\n\r\n### Some explanations\r\n\r\nThe script above might look a bit overwhelming. But actually there are only a few things which are additional to the commands which were typed in for one raster dataset. \r\n\r\n1. **import glob:**\r\nThe glob module allows us to search for certain files within a directory based on how they are named. So, we can use it to search for all geotiff files which start with `nt_2014`. The output from this is a list of files `data_listing`, ie.\r\n\r\n    ```python\r\n    data_listing = glob.glob('{}nt_2014*.tif'.format(data_dir))\r\n    ```\r\n\r\n2. **import os:**\r\nThe os module allows us to perform file operations. We have used it in this script to extract the file name (basename) from a file path, ie.\r\n\r\n    ```python\r\n    raster_name = os.path.basename(data)\r\n    ```\r\n\r\n3. **arcpy.CreateTable_management():**\r\nHere we are creating a table in the the geodatabase to store the results from the area calculation. We are also checking that the table does not already exist before creating it, ie.\r\n\r\n    ```python\r\n    if not arcpy.Exists('extent_results'):\r\n        arcpy.CreateTable_management(arcpy.env.workspace, 'extent_results')\r\n        arcpy.AddField_management(\"extent_results\", 'data_source', \"TEXT\")\r\n        arcpy.AddField_management(\"extent_results\", 'area', \"DOUBLE\")\r\n    ```\r\n\r\n4. **for data in data_listing:**\r\nThis represents the start of the loop, which takes each file path in the `data_listing` list and performs the GIS operations on each raster file. \r\n\r\n### Good job!\r\n\r\nYou've now managed to calculate monthly sea ice extent for 2014. Have a look at the results in the `extent_results` table.\r\n\r\n## What can you do from here?\r\n\r\nHere are some ideas for ways to extend this exercise, now that you have a script for extracting sea ice extent. \r\n\r\n* Download [all the monthly data from NSIDC](https://nsidc.org/data/nsidc-0051), and run this script over the whole time series. \r\n\r\n* Download all the daily data from the timeseries and run this script over all available days, one day for each year, one month, or whatever you choose. To do this, just select the day/month/year of rasters you want by ammending this line in `area_multiple_grid.py`:\r\n\r\n```python\r\n# ie. 1st September for every year\r\ndata_listing = glob.glob('{}nt_????0901*.tif'.format(data_dir))\r\n\r\n# ie. all rasters available for the year 1984\r\ndata_listing = glob.glob('{}nt_1984*.tif'.format(data_dir))\r\n\r\n```\r\n\r\n* Graph out the results\r\n\r\n* Create a time attribute on the polygon features and run animations. \r\n\r\n* Calculate the extent of ice that is classified as over 50% concentration. \r\n\r\n\r\n## Final thoughts...\r\n\r\nIf this is the first time you have tried scripting, don't worry. Try things, make mistakes, break things and work out why they aren't running. Play around with different ArcPy and other Python library functions and enjoy. Final tip: watch out for typos.\r\n\r\n\r\n## Reference\r\n\r\nCavalieri, D. J., C. L. Parkinson, P. Gloersen, and H. J. Zwally. 1996, updated yearly. Sea Ice Concentrations from Nimbus-7 SMMR and DMSP SSM/I-SSMIS Passive Microwave Data, Version 1. Boulder, Colorado USA. NASA National Snow and Ice Data Center Distributed Active Archive Center. http://dx.doi.org/10.5067/8GQ8LZQVL0VL. [Date Accessed: 2016-02-05].\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}